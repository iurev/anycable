module WEBrick
  module Config
    SSL: { ServerSoftware: ::String, SSLEnable: false, SSLCertificate: nil, SSLPrivateKey: nil, SSLClientCA: nil, SSLExtraChainCert: nil, SSLCACertificateFile: nil, SSLCACertificatePath: nil, SSLCertificateStore: nil, SSLTmpDhCallback: nil, SSLVerifyClient: untyped, SSLVerifyDepth: nil, SSLVerifyCallback: nil, SSLTimeout: nil, SSLOptions: nil, SSLCiphers: nil, SSLStartImmediately: true, SSLCertName: nil, SSLCertComment: "Generated by Ruby/OpenSSL" }
  end

  module Utils
    def self?.create_self_signed_cert: (untyped bits, untyped cn, untyped comment) -> ::Array[untyped]
  end

  class GenericServer
    def ssl_context: () -> untyped

    def listen: (untyped address, untyped port) -> untyped

    def setup_ssl_context: (untyped config) -> untyped

    def ssl_servername_callback: (untyped sslsocket, ?untyped? hostname) -> nil
  end
end
