# GRPC contains the General RPC module.
module GRPC
  # BadStatus is an exception class that indicates that an error occurred at
  # either end of a GRPC connection.  When raised, it indicates that a status
  # error should be returned to the other end of a GRPC connection; when
  # caught it means that this end received a status error.
  #
  # There is also subclass of BadStatus in this module for each GRPC status.
  # E.g., the GRPC::Cancelled class corresponds to status CANCELLED.
  #
  # See
  # https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/status.h
  # for detailed descriptions of each status code.
  class BadStatus < StandardError
    attr_reader code: untyped

    attr_reader details: untyped

    attr_reader metadata: untyped

    attr_reader debug_error_string: untyped

    include GRPC::Core::StatusCodes

    # @param code [Numeric] the status code
    # @param details [String] the details of the exception
    # @param metadata [Hash] the error's metadata
    def initialize: (untyped code, ?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void

    # Converts the exception to a {Struct::Status} for use in the networking
    # wrapper layer.
    #
    # @return [Struct::Status] with the same code and details
    def to_status: () -> untyped

    # Converts the exception to a deserialized {Google::Rpc::Status} object.
    # Returns `nil` if the `grpc-status-details-bin` trailer could not be
    # converted to a {Google::Rpc::Status} due to the server not providing
    # the necessary trailers.
    #
    # @return [Google::Rpc::Status, nil]
    def to_rpc_status: () -> untyped

    def self.new_status_exception: (untyped code, ?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> untyped
  end

  # GRPC status code corresponding to status OK
  class Ok < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status CANCELLED
  class Cancelled < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status UNKNOWN
  class Unknown < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status INVALID_ARGUMENT
  class InvalidArgument < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status DEADLINE_EXCEEDED
  class DeadlineExceeded < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status NOT_FOUND
  class NotFound < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status ALREADY_EXISTS
  class AlreadyExists < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status PERMISSION_DENIED
  class PermissionDenied < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status UNAUTHENTICATED
  class Unauthenticated < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status RESOURCE_EXHAUSTED
  class ResourceExhausted < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status FAILED_PRECONDITION
  class FailedPrecondition < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status ABORTED
  class Aborted < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status OUT_OF_RANGE
  class OutOfRange < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status UNIMPLEMENTED
  class Unimplemented < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status INTERNAL
  class Internal < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status UNAVAILABLE
  class Unavailable < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end

  # GRPC status code corresponding to status DATA_LOSS
  class DataLoss < BadStatus
    def initialize: (?::String details, ?::Hash[untyped, untyped] metadata, ?untyped? debug_error_string) -> void
  end
end
